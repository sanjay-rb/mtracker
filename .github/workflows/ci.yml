name: Perform CI
on:
  pull_request:
    branches: [main]

jobs:
  continuous_integration:
    name: Continuous Integration
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.7.2"
          channel: "stable"

      - name: Get Flutter Dependancy
        run: flutter pub get

      - name: Check Code Format
        run: dart format . --set-exit-if-changed

      - name: Analyze Code
        run: dart analyze .
      
      - name: Testing Build Web App
        run: flutter build web --release

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.IOS_BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.IOS_P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_BUILD_PROVISION_PROFILE_BASE64 }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      
      - name: POD Updated
        run: pod repo update
        working-directory: ios
      
      - name: Testing Build iOS App
        run: flutter build ios --release
      
  notification_success:
    if: success()
    needs: [continuous_integration]
    runs-on: ubuntu-latest
    steps:
      - name: Send Success Telegram Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Continuous Integration Completed Successfully!!!

            User: ${{ github.actor }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}

  notification_failure:
    if: failure()
    needs: [continuous_integration]
    runs-on: ubuntu-latest
    steps:
      - name: Send Failure Telegram Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Continuous Integration Failed!!!

            User: ${{ github.actor }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}
  